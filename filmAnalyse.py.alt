# -*- coding: utf-8 -*-
"""
Created on 2020-05-19

@author: rg

Modul filmAnalyse.py

ermöglicht die Gewinnung von FilmInfos

rg, ab 05.2021

"""
import subprocess

def _runit(cmd):
    try:
        pobj = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True, encoding="utf-8")
    except:
        print("Unbekannter Fehler beim run-Aufruf!")
        print("Unexpected error:{0}".format(sys.exc_info()[0]))

    return pobj

def getFilmDetails(filmname):
    cmd = r'C:\ffmpeg\\bin\ffprobe -hide_banner -show_streams -print_format csv ' + '"' + filmname + '"'
    pobj = _runit(cmd)
    ausg = pobj.stdout
    if pobj.returncode > 0:
        ausg = f'Fehler {pobj.returncode}\n' + ausg
    ausg = _FilmInfosLesen(ausg)
    return ausg


def _FilmInfosLesen(txt: str) -> str: 
    # liest die Ausgabe von ffprobe ein und gibt eine Liste mit 3 EInträgen aus:
    # - Video-Auflösung, Audio-Streams, Subtitles    
    video = ""    #txt + "\n\n"
    audio = ""
    subt = ""
    l_txt = txt.split("\n")
    audioAnz = 0
    # print(txt)
    for zle in l_txt:
        # zle = zle.strip()
        felder = zle.split(",")
        print(felder)
        for i in range(len(felder)):
            print(f"{i}: {felder[i]}")
        print()
        if len(felder) < 5:
            continue
        if felder[5] == "video":
            video = felder[2] + " " + felder[9] + "x" + felder[10]
        elif felder[5] == "audio":
            audioAnz += 1
            if audio > "":
                audio = audio + " // "
            audio = audio + felder[2] + " "
            if felder[2] == "mp2":
                x = felder[22][0:3] + " kb/s"
                y = felder[40]
            elif felder[2] == "ac3":
                x = felder[27][0:3] + " kb/s"
                y = felder[27]
            elif felder[2] == "aac_latm":
                x = ""
                y = felder[40]
            else:
                x = "??? kb/s"
                y = "any"
            if x > "":
                x = ", " + x
            audio = audio + felder[10] + " Hz" + x + "(" + y + ")"

        elif felder[5] == "subtitle":
            subt = ";".join([subt, "(" + felder[37] + ")"])

    audio = "[" + str(audioAnz) + "] " + audio
    return [video, audio, subt]

if __name__ == '__main__':
    print(getFilmDetails( r"e:\Filme\schnitt\Der_Eid.mkv"))
    print(getFilmDetails( r"e:\Filme\schnitt\Harter_Brocken_-_Der_Waffendeal.mkv"))